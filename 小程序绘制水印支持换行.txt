addWaterMark(tempFilePath, waterMark) {
      let that = this
      return new Promise((resolve, reject) => {
        let query = wx.createSelectorQuery().in(this)
        query.select('#mycanvas').fields({
          node: true,
          size: true
        }).exec((res) => {
          const canvas = res[0].node;
          const ctx = canvas.getContext('2d');
          const imageSrc = tempFilePath; // 替换为你的图片路径
          wx.getImageInfo({
            src: imageSrc,
            success: (imageRes) => {
              canvas.width = imageRes.width; // 设置 canvas 宽度为图片宽度
              canvas.height = imageRes.height; // 设置 canvas 高度为图片高度
              let imageWidth = imageRes.width, imageHeight = imageRes.height;
              this.setData({
                canvasWidth: imageWidth,
                canvasHeight: imageHeight,
              })
              // 图片对象
              const image = canvas.createImage()
              // 图片加载完成回调
              image.onload = () => {
                // 将图片绘制到 canvas 上
                ctx.drawImage(image, 0, 0)
                ctx.font = '30px Arial';
                let textGroup = waterMark.split('<br>')
                if (textGroup[0].indexOf('markimage|') != -1) textGroup.shift();
                for (let i = textGroup.length - 1; i > 0; i--) {
                  const it = textGroup[i]
                  if (!it.trim()) textGroup.splice(i, 1);
                }
                let bHeihgt = textGroup.length * 60 + 30, bWidth = imageWidth
                ctx.rect(0, imageHeight - bHeihgt, bWidth, bHeihgt)
                ctx.stroke();
                ctx.fillStyle = "rgba(71, 71, 71, 0.56)";
                ctx.fill();
                ctx.save();
                ctx.fillStyle = 'white';
                let tHeight = imageHeight - bHeihgt + 60,maxTextWidth = imageWidth - 60
                textGroup.forEach((str) => { 
                  let lineWidth = 0
                  let lastSubStrIndex = 0;
                  for (let i = 0; i < str.length; i++) { 
                    lineWidth += ctx.measureText(str[i]).width;
                    if (lineWidth > maxTextWidth) {
                      ctx.fillText(str.substring(lastSubStrIndex, i), 30, tHeight); //绘制截取部分
                      tHeight += 40 //40为字体的高度
                      lineWidth = 0;
                      lastSubStrIndex = i;
                    }
                    if (i == str.length - 1) { //绘制剩余部分
                      ctx.fillText(str.substring(lastSubStrIndex, i + 1), 30, tHeight);
                      tHeight += 40
                    }
                  }
                })
  
                // 将 canvas 导出成临时图片文件
                setTimeout(() => {
                  wx.canvasToTempFilePath({
                    canvas: canvas,
                    success: function (res) {
                      // 输出生成的带水印的图片临时路径
                      that.setData({
                        previewSrc: res.tempFilePath
                      })
                      resolve(res.tempFilePath)
                    },
                    fail: function (res) {
                      reject(res)
                      console.error(res);
                    }
                  });
                }, 300);
              
              }
              image.src = imageSrc
            },
            fail: function (imageRes) {
              console.error(imageRes);
            }
          });
        });
      })
    },